#####################################################################################
#
# SecureSocial 2 Settings
#
#####################################################################################

smtp {
	host=smtp.gmail.com
	#port=25
	ssl=true
	user="your_user"
	password=your_password
	from="your_from_address"
}

securesocial {
    #
    # If enabled, sets the path to your copy of Bootstrap.css to be used instead of the default one provided by SecureSocial
    #
    #bootstrapCssPath="your path"


    #
    # If enabled, sets the Favicon to display when in SecureSocial pages
    #
    #faviconPath="your path"


    #
    # If enabled, sets the path to your copy of JQuery to be used instead of the default one provided by SecureSocial
    #
    #jqueryPath="your path"


    #
    # If enabled, injects this Css file into all SecureSocial pages, allowing for minor style customizations
    # If you want to do major changes, please read about custom templates in SecureSocial
    #
    #customCssPath="your path"

	#
	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that led the use to the login page
	#
	onLoginGoTo=/

	#
	# Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
	#
	onLogoutGoTo=/login

	#
	# Enable SSL for oauth callback urls and login/signup/password recovery pages
	#
	ssl=false

	twitter {
		requestTokenUrl="https://twitter.com/oauth/request_token"
		accessTokenUrl="https://twitter.com/oauth/access_token"
		authorizationUrl="https://twitter.com/oauth/authenticate"
		consumerKey=your_consumer_key
		consumerSecret=your_consumer_secret
	}

	facebook {
		authorizationUrl="https://graph.facebook.com/oauth/authorize"
		accessTokenUrl="https://graph.facebook.com/oauth/access_token"
		clientId=your_client_id
		clientSecret=your_client_secret
		# this scope is the minimum SecureSocial requires.  You can add more if required by your app.
		scope=email
	}

	google {
		authorizationUrl="https://accounts.google.com/o/oauth2/auth"
		accessTokenUrl="https://accounts.google.com/o/oauth2/token"
		clientId=your_client_id
		clientSecret=your_client_secret
		scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
	}

	linkedin {
		requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
		accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
		authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
		consumerKey=your_consumer_key
		consumerSecret=your_consumer_secret
	}
    	
	github {
		authorizationUrl="https://github.com/login/oauth/authorize"
		accessTokenUrl="https://github.com/login/oauth/access_token"
		clientId=your_client_id
		clientSecret=your_client_secret
	}

	foursquare {
        	authorizationUrl="https://foursquare.com/oauth2/authenticate"
        	accessTokenUrl="https://foursquare.com/oauth2/access_token"
		clientId=your_client_id
		clientSecret=your_client_secret
    	}

    	xing {
		requestTokenUrl="https://api.xing.com/v1/request_token"
        	accessTokenUrl="https://api.xing.com/v1/access_token"
        	authorizationUrl="https://api.xing.com/v1/authorize"
		consumerKey=your_consumer_key
		consumerSecret=your_consumer_secret
    	}

    	instagram {
        	authorizationUrl="https://api.instagram.com/oauth/authorize"
		accessTokenUrl="https://api.instagram.com/oauth/access_token"
		clientId=your_client_id
		clientSecret=your_client_secret
		}

    vk {
        authorizationUrl="http://oauth.vk.com/authorize"
        accessTokenUrl="https://oauth.vk.com/access_token"
        clientId=your_client_id
        clientSecret=your_client_secret
    }

	userpass {
		#
		# Enable username support, otherwise SecureSocial will use the emails as user names
		#
		withUserNameSupport=false
		sendWelcomeEmail=true
		enableGravatarSupport=true
		tokenDuration=60
		tokenDeleteInterval=5
		signupSkipLogin=false
	}
}
